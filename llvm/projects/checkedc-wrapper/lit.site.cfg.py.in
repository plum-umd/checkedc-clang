@LIT_SITE_CFG_IN_HEADER@

# This is a slightly modified version of lit.site.cfg.py
# from clang\test.
# - It sets checkedc_obj_root
# - It invokes lit.cfg.py from the Checked C source directory.
# - A few configuration settings are set to 0 because the cmake variables
#   aren't set when this file is processed.

import sys

config.llvm_src_root = "@LLVM_SOURCE_DIR@"
config.llvm_obj_root = "@LLVM_BINARY_DIR@"
config.llvm_tools_dir = "@LLVM_TOOLS_DIR@"
config.llvm_libs_dir = "@LLVM_LIBS_DIR@"
config.llvm_shlib_dir = "@SHLIBDIR@"
config.llvm_plugin_ext = "@LLVM_PLUGIN_EXT@"
config.lit_tools_dir = "@LLVM_LIT_TOOLS_DIR@"
config.checkedc_obj_root = "@CHECKEDC_BINARY_DIR@"
config.clang_obj_root = "@CLANG_BINARY_DIR@"
config.clang_src_dir = "@CLANG_SOURCE_DIR@"
config.clang_tools_dir = "@CLANG_TOOLS_DIR@"
config.host_triple = "@LLVM_HOST_TRIPLE@"
config.target_triple = "@TARGET_TRIPLE@"
config.host_cxx = "@CMAKE_CXX_COMPILER@"
config.llvm_use_sanitizer = "@LLVM_USE_SANITIZER@"
config.have_zlib = "@LLVM_ENABLE_ZLIB@"
config.clang_arcmt = 0
config.clang_default_cxx_stdlib = "@CLANG_DEFAULT_CXX_STDLIB@"
config.clang_staticanalyzer =  0
config.clang_staticanalyzer_z3 = "@CLANG_ANALYZER_WITH_Z3@"
config.clang_examples = 0
config.enable_shared = @ENABLE_SHARED@
config.enable_backtrace = @ENABLE_BACKTRACES@
config.host_arch = "@HOST_ARCH@"
config.python_executable = "@PYTHON_EXECUTABLE@"
config.use_z3_solver = lit_config.params.get('USE_Z3_SOLVER', "@USE_Z3_SOLVER@")
config.checkedc_arm_sysroot = "@CHECKEDC_ARM_SYSROOT@"
config.checkedc_arm_rununder = "@CHECKEDC_ARM_RUNUNDER@"
config.checkedc_target_flags = ""
config.checkedc_rununder = ""

# Various targets can be enabled in lit by setting the lit flag
# -DCHECKEDC_TARGET=<target>.
checkedc_target = lit_config.params.get("CHECKEDC_TARGET")

# Set the target-specific flags and run device for ARM.
if checkedc_target == "ARM":
  if not config.checkedc_arm_sysroot:
    lit_config.fatal("ARM sysroot not set. Set it using llvm configure option CHECKEDC_ARM_SYSROOT")
  if not config.checkedc_arm_rununder:
    lit_config.fatal("ARM run device not set. Set it using llvm configure option CHECKEDC_ARM_RUNUNDER")

  config.checkedc_target_flags = \
    "-target arm-linux-gnueabihf -march=armv7-a -static \
     --sysroot={0}/arm-linux-gnueabihf/libc \
     --gcc-toolchain={0}".format(config.checkedc_arm_sysroot)
  config.checkedc_rununder = config.checkedc_arm_rununder

# Support substitution of the tools and libs dirs with user parameters. This is
# used when we can't determine the tool dir at configuration time.
try:
    config.clang_tools_dir = config.clang_tools_dir % lit_config.params
    config.llvm_tools_dir = config.llvm_tools_dir % lit_config.params
    config.llvm_shlib_dir = config.llvm_shlib_dir % lit_config.params
    config.llvm_libs_dir = config.llvm_libs_dir % lit_config.params
except KeyError:
    e = sys.exc_info()[1]
    key, = e.args
    lit_config.fatal("unable to find %r parameter, use '--param=%s=VALUE'" % (key,key))

import lit.llvm
lit.llvm.initialize(lit_config, config)

# Let the main config do the real work.
lit_config.load_config(config, "@CHECKEDC_SOURCE_DIR@/lit.cfg.py")
